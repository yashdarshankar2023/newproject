{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MongoCR = void 0;\nvar crypto = require(\"crypto\");\nvar error_1 = require(\"../../error\");\nvar utils_1 = require(\"../../utils\");\nvar auth_provider_1 = require(\"./auth_provider\");\nvar MongoCR = /*#__PURE__*/function (_auth_provider_1$Auth) {\n  _inherits(MongoCR, _auth_provider_1$Auth);\n  function MongoCR() {\n    _classCallCheck(this, MongoCR);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoCR).apply(this, arguments));\n  }\n  _createClass(MongoCR, [{\n    key: \"auth\",\n    value: function auth(authContext, callback) {\n      var connection = authContext.connection,\n        credentials = authContext.credentials;\n      if (!credentials) {\n        return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n      }\n      var username = credentials.username;\n      var password = credentials.password;\n      var source = credentials.source;\n      connection.command((0, utils_1.ns)(\"\".concat(source, \".$cmd\")), {\n        getnonce: 1\n      }, undefined, function (err, r) {\n        var nonce = null;\n        var key = null;\n        // Get nonce\n        if (err == null) {\n          nonce = r.nonce;\n          // Use node md5 generator\n          var md5 = crypto.createHash('md5');\n          // Generate keys used for authentication\n          md5.update(\"\".concat(username, \":mongo:\").concat(password), 'utf8');\n          var hash_password = md5.digest('hex');\n          // Final key\n          md5 = crypto.createHash('md5');\n          md5.update(nonce + username + hash_password, 'utf8');\n          key = md5.digest('hex');\n        }\n        var authenticateCommand = {\n          authenticate: 1,\n          user: username,\n          nonce: nonce,\n          key: key\n        };\n        connection.command((0, utils_1.ns)(\"\".concat(source, \".$cmd\")), authenticateCommand, undefined, callback);\n      });\n    }\n  }]);\n  return MongoCR;\n}(auth_provider_1.AuthProvider);\nexports.MongoCR = MongoCR;","map":null,"metadata":{},"sourceType":"script"}