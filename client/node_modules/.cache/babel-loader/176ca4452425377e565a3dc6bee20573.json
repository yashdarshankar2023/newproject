{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defineAspects = exports.AbstractOperation = exports.Aspect = void 0;\nvar bson_1 = require(\"../bson\");\nvar read_preference_1 = require(\"../read_preference\");\nexports.Aspect = {\n  READ_OPERATION: Symbol('READ_OPERATION'),\n  WRITE_OPERATION: Symbol('WRITE_OPERATION'),\n  RETRYABLE: Symbol('RETRYABLE'),\n  EXPLAINABLE: Symbol('EXPLAINABLE'),\n  SKIP_COLLATION: Symbol('SKIP_COLLATION'),\n  CURSOR_CREATING: Symbol('CURSOR_CREATING'),\n  MUST_SELECT_SAME_SERVER: Symbol('MUST_SELECT_SAME_SERVER')\n};\n/** @internal */\nvar kSession = Symbol('session');\n/**\n * This class acts as a parent class for any operation and is responsible for setting this.options,\n * as well as setting and getting a session.\n * Additionally, this class implements `hasAspect`, which determines whether an operation has\n * a specific aspect.\n * @internal\n */\nvar AbstractOperation = /*#__PURE__*/function () {\n  function AbstractOperation() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, AbstractOperation);\n    var _a;\n    this.readPreference = this.hasAspect(exports.Aspect.WRITE_OPERATION) ? read_preference_1.ReadPreference.primary : (_a = read_preference_1.ReadPreference.fromOptions(options)) !== null && _a !== void 0 ? _a : read_preference_1.ReadPreference.primary;\n    // Pull the BSON serialize options from the already-resolved options\n    this.bsonOptions = (0, bson_1.resolveBSONOptions)(options);\n    this[kSession] = options.session != null ? options.session : undefined;\n    this.options = options;\n    this.bypassPinningCheck = !!options.bypassPinningCheck;\n    this.trySecondaryWrite = false;\n  }\n  _createClass(AbstractOperation, [{\n    key: \"hasAspect\",\n    value: function hasAspect(aspect) {\n      var ctor = this.constructor;\n      if (ctor.aspects == null) {\n        return false;\n      }\n      return ctor.aspects.has(aspect);\n    }\n  }, {\n    key: \"clearSession\",\n    value: function clearSession() {\n      this[kSession] = undefined;\n    }\n  }, {\n    key: \"session\",\n    get: function get() {\n      return this[kSession];\n    }\n  }, {\n    key: \"canRetryRead\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"canRetryWrite\",\n    get: function get() {\n      return true;\n    }\n  }]);\n  return AbstractOperation;\n}();\nexports.AbstractOperation = AbstractOperation;\nfunction defineAspects(operation, aspects) {\n  if (!Array.isArray(aspects) && !(aspects instanceof Set)) {\n    aspects = [aspects];\n  }\n  aspects = new Set(aspects);\n  Object.defineProperty(operation, 'aspects', {\n    value: aspects,\n    writable: false\n  });\n  return aspects;\n}\nexports.defineAspects = defineAspects;","map":null,"metadata":{},"sourceType":"script"}