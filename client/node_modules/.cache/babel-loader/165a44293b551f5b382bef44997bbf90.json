{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamDescription = void 0;\nvar common_1 = require(\"../sdam/common\");\nvar server_description_1 = require(\"../sdam/server_description\");\nvar RESPONSE_FIELDS = ['minWireVersion', 'maxWireVersion', 'maxBsonObjectSize', 'maxMessageSizeBytes', 'maxWriteBatchSize', 'logicalSessionTimeoutMinutes'];\n/** @public */\nvar StreamDescription = /*#__PURE__*/function () {\n  function StreamDescription(address, options) {\n    _classCallCheck(this, StreamDescription);\n    this.address = address;\n    this.type = common_1.ServerType.Unknown;\n    this.minWireVersion = undefined;\n    this.maxWireVersion = undefined;\n    this.maxBsonObjectSize = 16777216;\n    this.maxMessageSizeBytes = 48000000;\n    this.maxWriteBatchSize = 100000;\n    this.logicalSessionTimeoutMinutes = options === null || options === void 0 ? void 0 : options.logicalSessionTimeoutMinutes;\n    this.loadBalanced = !!(options === null || options === void 0 ? void 0 : options.loadBalanced);\n    this.compressors = options && options.compressors && Array.isArray(options.compressors) ? options.compressors : [];\n  }\n  _createClass(StreamDescription, [{\n    key: \"receiveResponse\",\n    value: function receiveResponse(response) {\n      if (response == null) {\n        return;\n      }\n      this.type = (0, server_description_1.parseServerType)(response);\n      var _iterator = _createForOfIteratorHelper(RESPONSE_FIELDS),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var field = _step.value;\n          if (response[field] != null) {\n            this[field] = response[field];\n          }\n          // testing case\n          if ('__nodejs_mock_server__' in response) {\n            this.__nodejs_mock_server__ = response['__nodejs_mock_server__'];\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      if (response.compression) {\n        this.compressor = this.compressors.filter(function (c) {\n          var _a;\n          return (_a = response.compression) === null || _a === void 0 ? void 0 : _a.includes(c);\n        })[0];\n      }\n    }\n  }]);\n  return StreamDescription;\n}();\nexports.StreamDescription = StreamDescription;","map":null,"metadata":{},"sourceType":"script"}