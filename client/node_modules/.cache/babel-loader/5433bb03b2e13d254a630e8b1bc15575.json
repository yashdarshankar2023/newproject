{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _get = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\nvar _getPrototypeOf = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ListDatabasesOperation = void 0;\nvar utils_1 = require(\"../utils\");\nvar command_1 = require(\"./command\");\nvar operation_1 = require(\"./operation\");\n/** @internal */\nvar ListDatabasesOperation = /*#__PURE__*/function (_command_1$CommandOpe) {\n  _inherits(ListDatabasesOperation, _command_1$CommandOpe);\n  function ListDatabasesOperation(db, options) {\n    var _this;\n    _classCallCheck(this, ListDatabasesOperation);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListDatabasesOperation).call(this, db, options));\n    _this.options = options !== null && options !== void 0 ? options : {};\n    _this.ns = new utils_1.MongoDBNamespace('admin', '$cmd');\n    return _this;\n  }\n  _createClass(ListDatabasesOperation, [{\n    key: \"execute\",\n    value: function execute(server, session, callback) {\n      var cmd = {\n        listDatabases: 1\n      };\n      if (this.options.nameOnly) {\n        cmd.nameOnly = Number(cmd.nameOnly);\n      }\n      if (this.options.filter) {\n        cmd.filter = this.options.filter;\n      }\n      if (typeof this.options.authorizedDatabases === 'boolean') {\n        cmd.authorizedDatabases = this.options.authorizedDatabases;\n      }\n      // we check for undefined specifically here to allow falsy values\n      // eslint-disable-next-line no-restricted-syntax\n      if ((0, utils_1.maxWireVersion)(server) >= 9 && this.options.comment !== undefined) {\n        cmd.comment = this.options.comment;\n      }\n      _get(_getPrototypeOf(ListDatabasesOperation.prototype), \"executeCommand\", this).call(this, server, session, cmd, callback);\n    }\n  }]);\n  return ListDatabasesOperation;\n}(command_1.CommandOperation);\nexports.ListDatabasesOperation = ListDatabasesOperation;\n(0, operation_1.defineAspects)(ListDatabasesOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE]);","map":null,"metadata":{},"sourceType":"script"}