{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nvar _classCallCheck = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GetMoreOperation = void 0;\nvar error_1 = require(\"../error\");\nvar utils_1 = require(\"../utils\");\nvar operation_1 = require(\"./operation\");\n/** @internal */\nvar GetMoreOperation = /*#__PURE__*/function (_operation_1$Abstract) {\n  _inherits(GetMoreOperation, _operation_1$Abstract);\n  function GetMoreOperation(ns, cursorId, server, options) {\n    var _this;\n    _classCallCheck(this, GetMoreOperation);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GetMoreOperation).call(this, options));\n    _this.options = options;\n    _this.ns = ns;\n    _this.cursorId = cursorId;\n    _this.server = server;\n    return _this;\n  }\n  /**\n   * Although there is a server already associated with the get more operation, the signature\n   * for execute passes a server so we will just use that one.\n   */\n  _createClass(GetMoreOperation, [{\n    key: \"execute\",\n    value: function execute(server, session, callback) {\n      if (server !== this.server) {\n        return callback(new error_1.MongoRuntimeError('Getmore must run on the same server operation began on'));\n      }\n      if (this.cursorId == null || this.cursorId.isZero()) {\n        return callback(new error_1.MongoRuntimeError('Unable to iterate cursor with no id'));\n      }\n      var collection = this.ns.collection;\n      if (collection == null) {\n        // Cursors should have adopted the namespace returned by MongoDB\n        // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n        return callback(new error_1.MongoRuntimeError('A collection name must be determined before getMore'));\n      }\n      var getMoreCmd = {\n        getMore: this.cursorId,\n        collection: collection\n      };\n      if (typeof this.options.batchSize === 'number') {\n        getMoreCmd.batchSize = Math.abs(this.options.batchSize);\n      }\n      if (typeof this.options.maxAwaitTimeMS === 'number') {\n        getMoreCmd.maxTimeMS = this.options.maxAwaitTimeMS;\n      }\n      // we check for undefined specifically here to allow falsy values\n      // eslint-disable-next-line no-restricted-syntax\n      if (this.options.comment !== undefined && (0, utils_1.maxWireVersion)(server) >= 9) {\n        getMoreCmd.comment = this.options.comment;\n      }\n      var commandOptions = _objectSpread({\n        returnFieldSelector: null,\n        documentsReturnedIn: 'nextBatch'\n      }, this.options);\n      server.command(this.ns, getMoreCmd, commandOptions, callback);\n    }\n  }]);\n  return GetMoreOperation;\n}(operation_1.AbstractOperation);\nexports.GetMoreOperation = GetMoreOperation;\n(0, operation_1.defineAspects)(GetMoreOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.MUST_SELECT_SAME_SERVER]);","map":null,"metadata":{},"sourceType":"script"}