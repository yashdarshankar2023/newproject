{"ast":null,"code":"var _jsxFileName = \"F:\\\\programnodejs\\\\project\\\\client\\\\src\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddStaff = () => {\n  _s();\n\n  var [name, setName] = useState();\n\n  const nameUpdate = event => {\n    // Dealing with name field changes to update our state\n    setName(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    // Once the form has been submitted, this function will post to the backend\n    const postURL = \"http://localhost:5000/login\"; //Our previously set up route in the backend\n\n    fetch(postURL, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        // We should keep the fields consistent for managing this data later\n        name: name,\n        clockedIn: false,\n        dates: []\n      })\n    }).then(() => {\n      // Once posted, the user will be notified \n      alert('You have been added to the system!');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Full Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        onChange: nameUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddStaff, \"tM2YBx9dq0pEEL4vxUK9iLbk07s=\");\n\n_c = AddStaff;\nexport default AddStaff;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddStaff\");","map":{"version":3,"names":["React","useState","AddStaff","name","setName","nameUpdate","event","target","value","handleSubmit","postURL","fetch","method","headers","body","JSON","stringify","clockedIn","dates","then","alert"],"sources":["F:/programnodejs/project/client/src/login.js"],"sourcesContent":["\r\nimport React, { useState }  from 'react'\r\n\r\nexport const AddStaff= ()=> {\r\n\r\n    var [name,setName]=useState()\r\n    \r\n    const nameUpdate=(event)=>{ // Dealing with name field changes to update our state\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const handleSubmit=()=> { // Once the form has been submitted, this function will post to the backend\r\n        const postURL = \"http://localhost:5000/login\" //Our previously set up route in the backend\r\n        fetch(postURL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ // We should keep the fields consistent for managing this data later\r\n                name: name,\r\n                clockedIn:false,\r\n                dates:[]\r\n            })\r\n        })\r\n        .then(()=>{\r\n            // Once posted, the user will be notified \r\n            alert('You have been added to the system!');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Full Name:</label>\r\n                <input required onChange={nameUpdate}></input>\r\n                <button type=\"submit\"> Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default AddStaff"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;;AAEA,OAAO,MAAMC,QAAQ,GAAE,MAAK;EAAA;;EAExB,IAAI,CAACC,IAAD,EAAMC,OAAN,IAAeH,QAAQ,EAA3B;;EAEA,MAAMI,UAAU,GAAEC,KAAD,IAAS;IAAE;IACxBF,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;EACH,CAFD;;EAIA,MAAMC,YAAY,GAAC,MAAK;IAAE;IACtB,MAAMC,OAAO,GAAG,6BAAhB,CADoB,CAC0B;;IAC9CC,KAAK,CAACD,OAAD,EAAU;MACXE,MAAM,EAAE,MADG;MAEXC,OAAO,EAAE;QACL,UAAU,kBADL;QAEL,gBAAgB;MAFX,CAFE;MAMXC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAE;QACnBb,IAAI,EAAEA,IADW;QAEjBc,SAAS,EAAC,KAFO;QAGjBC,KAAK,EAAC;MAHW,CAAf;IANK,CAAV,CAAL,CAYCC,IAZD,CAYM,MAAI;MACN;MACAC,KAAK,CAAC,oCAAD,CAAL;IACH,CAfD;EAgBH,CAlBD;;EAoBA,oBACI;IAAA,uBACI;MAAM,QAAQ,EAAEX,YAAhB;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,QAAQ,MAAf;QAAgB,QAAQ,EAAEJ;MAA1B;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH,CAtCM;;GAAMH,Q;;KAAAA,Q;AAwCb,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}