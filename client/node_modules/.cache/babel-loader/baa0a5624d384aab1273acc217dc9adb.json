{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nvar _classCallCheck = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommandOperation = void 0;\nvar error_1 = require(\"../error\");\nvar explain_1 = require(\"../explain\");\nvar read_concern_1 = require(\"../read_concern\");\nvar server_selection_1 = require(\"../sdam/server_selection\");\nvar utils_1 = require(\"../utils\");\nvar write_concern_1 = require(\"../write_concern\");\nvar operation_1 = require(\"./operation\");\nvar SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\n/** @internal */\nvar CommandOperation = /*#__PURE__*/function (_operation_1$Abstract) {\n  _inherits(CommandOperation, _operation_1$Abstract);\n  function CommandOperation(parent, options) {\n    var _this;\n    _classCallCheck(this, CommandOperation);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommandOperation).call(this, options));\n    _this.options = options !== null && options !== void 0 ? options : {};\n    // NOTE: this was explicitly added for the add/remove user operations, it's likely\n    //       something we'd want to reconsider. Perhaps those commands can use `Admin`\n    //       as a parent?\n    var dbNameOverride = (options === null || options === void 0 ? void 0 : options.dbName) || (options === null || options === void 0 ? void 0 : options.authdb);\n    if (dbNameOverride) {\n      _this.ns = new utils_1.MongoDBNamespace(dbNameOverride, '$cmd');\n    } else {\n      _this.ns = parent ? parent.s.namespace.withCollection('$cmd') : new utils_1.MongoDBNamespace('admin', '$cmd');\n    }\n    _this.readConcern = read_concern_1.ReadConcern.fromOptions(options);\n    _this.writeConcern = write_concern_1.WriteConcern.fromOptions(options);\n    // TODO(NODE-2056): make logger another \"inheritable\" property\n    if (parent && parent.logger) {\n      _this.logger = parent.logger;\n    }\n    if (_this.hasAspect(operation_1.Aspect.EXPLAINABLE)) {\n      _this.explain = explain_1.Explain.fromOptions(options);\n    } else if ((options === null || options === void 0 ? void 0 : options.explain) != null) {\n      throw new error_1.MongoInvalidArgumentError(\"Option \\\"explain\\\" is not supported on this command\");\n    }\n    return _this;\n  }\n  _createClass(CommandOperation, [{\n    key: \"executeCommand\",\n    value: function executeCommand(server, session, cmd, callback) {\n      // TODO: consider making this a non-enumerable property\n      this.server = server;\n      var options = _objectSpread({}, this.options, this.bsonOptions, {\n        readPreference: this.readPreference,\n        session: session\n      });\n      var serverWireVersion = (0, utils_1.maxWireVersion)(server);\n      var inTransaction = this.session && this.session.inTransaction();\n      if (this.readConcern && (0, utils_1.commandSupportsReadConcern)(cmd) && !inTransaction) {\n        Object.assign(cmd, {\n          readConcern: this.readConcern\n        });\n      }\n      if (this.trySecondaryWrite && serverWireVersion < server_selection_1.MIN_SECONDARY_WRITE_WIRE_VERSION) {\n        options.omitReadPreference = true;\n      }\n      if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n        callback(new error_1.MongoCompatibilityError(\"Server \".concat(server.name, \", which reports wire version \").concat(serverWireVersion, \", does not support collation\")));\n        return;\n      }\n      if (this.writeConcern && this.hasAspect(operation_1.Aspect.WRITE_OPERATION) && !inTransaction) {\n        Object.assign(cmd, {\n          writeConcern: this.writeConcern\n        });\n      }\n      if (serverWireVersion >= SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n        if (options.collation && typeof options.collation === 'object' && !this.hasAspect(operation_1.Aspect.SKIP_COLLATION)) {\n          Object.assign(cmd, {\n            collation: options.collation\n          });\n        }\n      }\n      if (typeof options.maxTimeMS === 'number') {\n        cmd.maxTimeMS = options.maxTimeMS;\n      }\n      if (this.hasAspect(operation_1.Aspect.EXPLAINABLE) && this.explain) {\n        if (serverWireVersion < 6 && cmd.aggregate) {\n          // Prior to 3.6, with aggregate, verbosity is ignored, and we must pass in \"explain: true\"\n          cmd.explain = true;\n        } else {\n          cmd = (0, utils_1.decorateWithExplain)(cmd, this.explain);\n        }\n      }\n      server.command(this.ns, cmd, options, callback);\n    }\n  }, {\n    key: \"canRetryWrite\",\n    get: function get() {\n      if (this.hasAspect(operation_1.Aspect.EXPLAINABLE)) {\n        return this.explain == null;\n      }\n      return true;\n    }\n  }]);\n  return CommandOperation;\n}(operation_1.AbstractOperation);\nexports.CommandOperation = CommandOperation;","map":null,"metadata":{},"sourceType":"script"}