{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ServerHeartbeatFailedEvent = exports.ServerHeartbeatSucceededEvent = exports.ServerHeartbeatStartedEvent = exports.TopologyClosedEvent = exports.TopologyOpeningEvent = exports.TopologyDescriptionChangedEvent = exports.ServerClosedEvent = exports.ServerOpeningEvent = exports.ServerDescriptionChangedEvent = void 0;\n/**\n * Emitted when server description changes, but does NOT include changes to the RTT.\n * @public\n * @category Event\n */\nvar ServerDescriptionChangedEvent = /** @internal */\nfunction ServerDescriptionChangedEvent(topologyId, address, previousDescription, newDescription) {\n  _classCallCheck(this, ServerDescriptionChangedEvent);\n  this.topologyId = topologyId;\n  this.address = address;\n  this.previousDescription = previousDescription;\n  this.newDescription = newDescription;\n};\nexports.ServerDescriptionChangedEvent = ServerDescriptionChangedEvent;\n/**\n * Emitted when server is initialized.\n * @public\n * @category Event\n */\nvar ServerOpeningEvent = /** @internal */\nfunction ServerOpeningEvent(topologyId, address) {\n  _classCallCheck(this, ServerOpeningEvent);\n  this.topologyId = topologyId;\n  this.address = address;\n};\nexports.ServerOpeningEvent = ServerOpeningEvent;\n/**\n * Emitted when server is closed.\n * @public\n * @category Event\n */\nvar ServerClosedEvent = /** @internal */\nfunction ServerClosedEvent(topologyId, address) {\n  _classCallCheck(this, ServerClosedEvent);\n  this.topologyId = topologyId;\n  this.address = address;\n};\nexports.ServerClosedEvent = ServerClosedEvent;\n/**\n * Emitted when topology description changes.\n * @public\n * @category Event\n */\nvar TopologyDescriptionChangedEvent = /** @internal */\nfunction TopologyDescriptionChangedEvent(topologyId, previousDescription, newDescription) {\n  _classCallCheck(this, TopologyDescriptionChangedEvent);\n  this.topologyId = topologyId;\n  this.previousDescription = previousDescription;\n  this.newDescription = newDescription;\n};\nexports.TopologyDescriptionChangedEvent = TopologyDescriptionChangedEvent;\n/**\n * Emitted when topology is initialized.\n * @public\n * @category Event\n */\nvar TopologyOpeningEvent = /** @internal */\nfunction TopologyOpeningEvent(topologyId) {\n  _classCallCheck(this, TopologyOpeningEvent);\n  this.topologyId = topologyId;\n};\nexports.TopologyOpeningEvent = TopologyOpeningEvent;\n/**\n * Emitted when topology is closed.\n * @public\n * @category Event\n */\nvar TopologyClosedEvent = /** @internal */\nfunction TopologyClosedEvent(topologyId) {\n  _classCallCheck(this, TopologyClosedEvent);\n  this.topologyId = topologyId;\n};\nexports.TopologyClosedEvent = TopologyClosedEvent;\n/**\n * Emitted when the server monitor’s hello command is started - immediately before\n * the hello command is serialized into raw BSON and written to the socket.\n *\n * @public\n * @category Event\n */\nvar ServerHeartbeatStartedEvent = /** @internal */\nfunction ServerHeartbeatStartedEvent(connectionId) {\n  _classCallCheck(this, ServerHeartbeatStartedEvent);\n  this.connectionId = connectionId;\n};\nexports.ServerHeartbeatStartedEvent = ServerHeartbeatStartedEvent;\n/**\n * Emitted when the server monitor’s hello succeeds.\n * @public\n * @category Event\n */\nvar ServerHeartbeatSucceededEvent = /** @internal */\nfunction ServerHeartbeatSucceededEvent(connectionId, duration, reply) {\n  _classCallCheck(this, ServerHeartbeatSucceededEvent);\n  this.connectionId = connectionId;\n  this.duration = duration;\n  this.reply = reply !== null && reply !== void 0 ? reply : {};\n};\nexports.ServerHeartbeatSucceededEvent = ServerHeartbeatSucceededEvent;\n/**\n * Emitted when the server monitor’s hello fails, either with an “ok: 0” or a socket exception.\n * @public\n * @category Event\n */\nvar ServerHeartbeatFailedEvent = /** @internal */\nfunction ServerHeartbeatFailedEvent(connectionId, duration, failure) {\n  _classCallCheck(this, ServerHeartbeatFailedEvent);\n  this.connectionId = connectionId;\n  this.duration = duration;\n  this.failure = failure;\n};\nexports.ServerHeartbeatFailedEvent = ServerHeartbeatFailedEvent;","map":null,"metadata":{},"sourceType":"script"}