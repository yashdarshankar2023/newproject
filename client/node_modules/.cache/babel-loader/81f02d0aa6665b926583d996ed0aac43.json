{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"F:\\\\programnodejs\\\\project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Explain = exports.ExplainVerbosity = void 0;\nvar error_1 = require(\"./error\");\n/** @public */\nexports.ExplainVerbosity = Object.freeze({\n  queryPlanner: 'queryPlanner',\n  queryPlannerExtended: 'queryPlannerExtended',\n  executionStats: 'executionStats',\n  allPlansExecution: 'allPlansExecution'\n});\n/** @internal */\nvar Explain = /*#__PURE__*/function () {\n  function Explain(verbosity) {\n    _classCallCheck(this, Explain);\n    if (typeof verbosity === 'boolean') {\n      this.verbosity = verbosity ? exports.ExplainVerbosity.allPlansExecution : exports.ExplainVerbosity.queryPlanner;\n    } else {\n      this.verbosity = verbosity;\n    }\n  }\n  _createClass(Explain, null, [{\n    key: \"fromOptions\",\n    value: function fromOptions(options) {\n      if ((options === null || options === void 0 ? void 0 : options.explain) == null) return;\n      var explain = options.explain;\n      if (typeof explain === 'boolean' || typeof explain === 'string') {\n        return new Explain(explain);\n      }\n      throw new error_1.MongoInvalidArgumentError('Field \"explain\" must be a string or a boolean');\n    }\n  }]);\n  return Explain;\n}();\nexports.Explain = Explain;","map":null,"metadata":{},"sourceType":"script"}